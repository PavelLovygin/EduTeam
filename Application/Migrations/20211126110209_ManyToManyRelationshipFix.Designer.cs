// <auto-generated />
using System;
using Application;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Application.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20211126110209_ManyToManyRelationshipFix")]
    partial class ManyToManyRelationshipFix
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ApplicationCore.Project.Project", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Guid");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("ApplicationCore.User.User", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Nickname")
                        .HasColumnType("longtext");

                    b.HasKey("Guid");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ApplicationCore.UserProject", b =>
                {
                    b.Property<Guid>("UserGuid")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ProjectGuid")
                        .HasColumnType("char(36)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("UserGuid", "ProjectGuid");

                    b.ToTable("UserProject");

                    b.HasDiscriminator<string>("Discriminator").HasValue("UserProject");
                });

            modelBuilder.Entity("ApplicationCore.MemberProject", b =>
                {
                    b.HasBaseType("ApplicationCore.UserProject");

                    b.HasIndex("ProjectGuid");

                    b.HasDiscriminator().HasValue("MemberProject");
                });

            modelBuilder.Entity("ApplicationCore.Relationships.InvitationProject", b =>
                {
                    b.HasBaseType("ApplicationCore.UserProject");

                    b.Property<Guid?>("UserGuid1")
                        .HasColumnType("char(36)")
                        .HasColumnName("InvitationProject_UserGuid1");

                    b.HasIndex("UserGuid1");

                    b.HasDiscriminator().HasValue("InvitationProject");
                });

            modelBuilder.Entity("ApplicationCore.Relationships.RequestProject", b =>
                {
                    b.HasBaseType("ApplicationCore.UserProject");

                    b.Property<Guid?>("UserGuid1")
                        .HasColumnType("char(36)");

                    b.HasIndex("UserGuid1");

                    b.HasDiscriminator().HasValue("RequestProject");
                });

            modelBuilder.Entity("ApplicationCore.MemberProject", b =>
                {
                    b.HasOne("ApplicationCore.User.User", "User")
                        .WithMany("Projects")
                        .HasForeignKey("ProjectGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApplicationCore.Project.Project", "Project")
                        .WithMany("Members")
                        .HasForeignKey("UserGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ApplicationCore.Relationships.InvitationProject", b =>
                {
                    b.HasOne("ApplicationCore.Project.Project", "Project")
                        .WithMany("Invitations")
                        .HasForeignKey("UserGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApplicationCore.User.User", "User")
                        .WithMany()
                        .HasForeignKey("UserGuid1");

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ApplicationCore.Relationships.RequestProject", b =>
                {
                    b.HasOne("ApplicationCore.Project.Project", "Project")
                        .WithMany("Requests")
                        .HasForeignKey("UserGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApplicationCore.User.User", "User")
                        .WithMany()
                        .HasForeignKey("UserGuid1");

                    b.Navigation("Project");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ApplicationCore.Project.Project", b =>
                {
                    b.Navigation("Invitations");

                    b.Navigation("Members");

                    b.Navigation("Requests");
                });

            modelBuilder.Entity("ApplicationCore.User.User", b =>
                {
                    b.Navigation("Projects");
                });
#pragma warning restore 612, 618
        }
    }
}
